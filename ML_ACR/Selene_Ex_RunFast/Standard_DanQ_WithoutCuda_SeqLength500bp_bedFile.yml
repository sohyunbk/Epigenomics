---
ops: [train, evaluate]
model: {
    # TODO: update this line with the absolute path to the file.
    path: /home/sb14489/Epigenomics/ML_ACR/Selene_AllModels_BashRun_ymlFiles/DanQ_model_500bp.py,
    class: DanQ,
    class_args: {
        sequence_length: 500,
        n_targets: 18,
    },
    non_strand_specific: mean
}
sampler: !obj:selene_sdk.samplers.file_samplers.BedFileSampler {
    filepath: /scratch/sb14489/8.ML_ACR/1.MaizeGenotypes_Alex/2.Selene/test_SNVs_curated_RandomSelectSNPperACR_NotMutated_500bp_DanQ/SampledData/validate_data.bed,  # generated from selene_sdk training (`test_data.bed`)
    reference_sequence: !obj:selene_sdk.sequences.Genome {
        input_path: /scratch/sb14489/0.Reference/Maize_B73/Zm-B73-REFERENCE-NAM-5.0_OnlyChr.fa
    },
    n_samples: 4992,  # wc -l file.bed
    targets_avail: True,
    sequence_length: 500,
    n_features: 18
}
train_model: !obj:selene_sdk.TrainModel {
    batch_size: 64,
    max_steps: 800,  # update this value for longer training
    report_stats_every_n_steps: 1000,
    n_validation_samples: 600,
    n_test_samples: 1000,
    cpu_n_threads: 32,
    use_cuda: False,  # TODO: update this if CUDA is not on your machine
    data_parallel: False,
    output_dir: /scratch/sb14489/Test_bed_Train
}
random_seed: 1337

...
