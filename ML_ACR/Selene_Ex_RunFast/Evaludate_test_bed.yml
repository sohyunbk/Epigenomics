---
ops: [evaluate]
model: {
    path: /absolute/path/to/model/architecture.py,
    class: ModelArchitectureClassName,
    class_args: {
        arg1: val1,
        arg2: val2
    },
    non_strand_specific: mean
}
sampler: !obj:selene_sdk.samplers.file_samplers.BedFileSampler {
    filepath: /path/to/file.bed,  # generated from selene_sdk training (`test_data.bed`)
    reference_sequence: !obj:selene_sdk.sequences.Genome {
        input_path: /path/to/genome/hg.fa
    },
    n_samples: n_samples_in_file,  # wc -l file.bed
    targets_avail: True,
    sequence_length: 1000,
    n_features: 2
}
evaluate_model: !obj:selene_sdk.EvaluateModel {
    features:  !obj:selene_sdk.utils.load_features_list {
        input_path: /path/to/distinct_features.txt
    },
    trained_model_path: /path/to/trained_model.pth.tar,
    batch_size: 64,
    report_gt_feature_n_positives: 50,
    use_cuda: True,
    output_dir: /path/to/output_dir
}
random_seed: 1337
...
